(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{456:function(t,s,e){"use strict";e.r(s);var a=e(19),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.typescripttutorial.net/typescript-tutorial/typescript-types/",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文地址"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("在本教程中，你将了解 TypeScript 中的类型和它的用途。")]),t._v(" "),e("h3",{attrs:{id:"typescript-中的类型是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-中的类型是什么"}},[t._v("#")]),t._v(" TypeScript 中的类型是什么")]),t._v(" "),e("p",[t._v("在 TypeScript 中，类型可以方便地描述一个值拥有的属性和方法，值是任何可以赋值给变量的东西，比如数字，字符串，数组，对象或者函数。")]),t._v(" "),e("p",[t._v("看看下面的值：")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("当你看这个值的时候，你会说它是一个字符串，这个值拥有字符串所拥有的属性和方法。比如 "),e("code",[t._v("'Hello'")]),t._v(" 值有一个名为 "),e("code",[t._v("length")]),t._v(" 的属性，它返回字符串拥有的字符数量：")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("它也有很多的方法，比如 "),e("code",[t._v("match()")]),t._v("， "),e("code",[t._v("indexOf()")]),t._v(" 和 "),e("code",[t._v("toLocaleUpperCase()")]),t._v("，例如：")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleUpperCase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HELLO")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("观察 "),e("code",[t._v("'Hello'")]),t._v(" 值的时候，通过罗列出它所有的属性和方法的方式来描述它是非常不便的，而通过类型来描述一个值将是一个更加简单有效的方式。")]),t._v(" "),e("p",[t._v("在这个例子中，指出 "),e("code",[t._v("'Hello'")]),t._v(" 是一个字符串，从而也知道可以在 "),e("code",[t._v("'Hello'")]),t._v(" 值上使用字符串所拥有的所有属性和方法。")]),t._v(" "),e("p",[t._v("总之，在 TypeScript 中：")]),t._v(" "),e("ul",[e("li",[t._v("类型是描述值所具有的属性和方法的标签；")]),t._v(" "),e("li",[t._v("每个值都有一种类型。")])]),t._v(" "),e("h3",{attrs:{id:"typescript-中的类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-中的类型"}},[t._v("#")]),t._v(" TypeScript 中的类型")]),t._v(" "),e("p",[t._v("TypeScript 继承了 JavaScript 的内置类型，TypeScript 中的类型可分为：")]),t._v(" "),e("ul",[e("li",[t._v("原始类型")]),t._v(" "),e("li",[t._v("对象类型")])]),t._v(" "),e("h4",{attrs:{id:"原始类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原始类型"}},[t._v("#")]),t._v(" 原始类型")]),t._v(" "),e("p",[t._v("下面列出了 TypeScript 中的原始类型：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("名字")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("RouterLink",{attrs:{to:"/2-basic-types/3-string/"}},[t._v("字符串")])],1),t._v(" "),e("td",[t._v("表示文本类型数据")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/2-basic-types/2-number/"}},[t._v("数字")])],1),t._v(" "),e("td",[t._v("表示数值")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/2-basic-types/4-boolean/"}},[t._v("布尔值")])],1),t._v(" "),e("td",[t._v("有 "),e("code",[t._v("true")]),t._v(" 值和 "),e("code",[t._v("false")]),t._v(" 值")])]),t._v(" "),e("tr",[e("td",[t._v("null")]),t._v(" "),e("td",[t._v("有一个值：null")])]),t._v(" "),e("tr",[e("td",[t._v("undefined")]),t._v(" "),e("td",[t._v("有一个值：undefined，它是未初始化变量的默认值")])]),t._v(" "),e("tr",[e("td",[t._v("symbol")]),t._v(" "),e("td",[t._v("表示唯一常量值")])])])]),t._v(" "),e("h4",{attrs:{id:"对象类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象类型"}},[t._v("#")]),t._v(" 对象类型")]),t._v(" "),e("p",[t._v("对象类型包括函数，数组和类等，稍后你将学习如何创建自定义对象类型。")]),t._v(" "),e("h3",{attrs:{id:"typescript-中类型的作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-中类型的作用"}},[t._v("#")]),t._v(" TypeScript 中类型的作用")]),t._v(" "),e("p",[t._v("TypeScript 中类型的主要作用如下：")]),t._v(" "),e("ul",[e("li",[t._v("首先，TypeScript 编译器使用类型来分析代码中错误；")]),t._v(" "),e("li",[t._v("其次，类型帮助你了解变量所关联的值是什么。")])]),t._v(" "),e("h3",{attrs:{id:"typescript-中类型示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-中类型示例"}},[t._v("#")]),t._v(" TypeScript 中类型示例")]),t._v(" "),e("p",[t._v("下面的例子使用 "),e("a",{attrs:{href:"https://zh.javascript.info/searching-elements-dom#querySelector",target:"_blank",rel:"noopener noreferrer"}},[t._v("querySelector()"),e("OutboundLink")],1),t._v(" 方法来选出 "),e("code",[t._v("<h1>")]),t._v(" 元素：")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" heading "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("TypeScript 编译器知道 "),e("code",[t._v("heading")]),t._v(" 的类型是 "),e("code",[t._v("HTMLHeadingElement")]),t._v("：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/cody1991/images@master/typescript-tutorial/TypeScript-types-example-1.4h001hujndw0.png",alt:"TypeScript-types-example-1"}})]),t._v(" "),e("p",[t._v("下面列出了类型为 "),e("code",[t._v("HTMLHeadingElement")]),t._v(" 的 "),e("code",[t._v("heading")]),t._v(" 变量可以访问的属性和方法列表：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/cody1991/images@master/typescript-tutorial/TypeScript-types-properties-and-methods.2izwvt0qmfa0.png",alt:"TypeScript-types-properties-and-methods"}})]),t._v(" "),e("p",[t._v("如果你试图访问值上不存在的属性和方法时，TypeScript 编译器会显示错误提示，如下所示：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/cody1991/images@master/typescript-tutorial/TypeScript-types-error.4c00bls39gw0.png",alt:"TypeScript-types-error"}})]),t._v(" "),e("h3",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("ul",[e("li",[t._v("TypeScript 中每个值都有一种类型；")]),t._v(" "),e("li",[t._v("类型是描述值所具有的属性和方法的标签；")]),t._v(" "),e("li",[t._v("TypeScript 编译器使用类型分析你的代码，找出其中存在的 bug 或者错误。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);